/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { FlagrightApi } from "@fern-api/flagright";
import * as core from "../../../../core";

export const RuleHitMeta: core.serialization.ObjectSchema<serializers.RuleHitMeta.Raw, FlagrightApi.RuleHitMeta> =
    core.serialization.object({
        hitDirections: core.serialization
            .list(core.serialization.lazy(async () => (await import("../../..")).RuleHitDirection))
            .optional(),
        caseCreationType: core.serialization.lazy(async () => (await import("../../..")).CaseCreationType).optional(),
        falsePositiveDetails: core.serialization
            .lazyObject(async () => (await import("../../..")).FalsePositiveDetails)
            .optional(),
    });

export declare namespace RuleHitMeta {
    interface Raw {
        hitDirections?: serializers.RuleHitDirection.Raw[] | null;
        caseCreationType?: serializers.CaseCreationType.Raw | null;
        falsePositiveDetails?: serializers.FalsePositiveDetails.Raw | null;
    }
}
