/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { FlagrightApi } from "@fern-api/flagright";
import * as core from "../../../../core";

export const ExecutedRulesResult: core.serialization.ObjectSchema<
    serializers.ExecutedRulesResult.Raw,
    FlagrightApi.ExecutedRulesResult
> = core.serialization.object({
    ruleId: core.serialization.string(),
    ruleInstanceId: core.serialization.string(),
    ruleName: core.serialization.string(),
    ruleDescription: core.serialization.string(),
    ruleAction: core.serialization.lazy(async () => (await import("../../..")).RuleAction),
    ruleHit: core.serialization.boolean(),
    ruleHitMeta: core.serialization.lazyObject(async () => (await import("../../..")).RuleHitMeta).optional(),
});

export declare namespace ExecutedRulesResult {
    interface Raw {
        ruleId: string;
        ruleInstanceId: string;
        ruleName: string;
        ruleDescription: string;
        ruleAction: serializers.RuleAction.Raw;
        ruleHit: boolean;
        ruleHitMeta?: serializers.RuleHitMeta.Raw | null;
    }
}
