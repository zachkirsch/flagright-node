/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { FlagrightApi } from "@fern-api/flagright";
import * as core from "../../../../core";

export const BusinessOptional: core.serialization.ObjectSchema<
    serializers.BusinessOptional.Raw,
    FlagrightApi.BusinessOptional
> = core.serialization.object({
    userStateDetails: core.serialization.lazyObject(async () => (await import("../../..")).UserStateDetails).optional(),
    kycStatusDetails: core.serialization.lazyObject(async () => (await import("../../..")).KycStatusDetails).optional(),
    shareHolders: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).Person))
        .optional(),
    directors: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).Person))
        .optional(),
    transactionLimits: core.serialization
        .lazyObject(async () => (await import("../../..")).TransactionLimits)
        .optional(),
    allowedPaymentMethods: core.serialization
        .list(core.serialization.lazy(async () => (await import("../../..")).PaymentMethods))
        .optional(),
    tags: core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).Tag)).optional(),
    mccDetails: core.serialization.lazyObject(async () => (await import("../../..")).MccDetails).optional(),
});

export declare namespace BusinessOptional {
    interface Raw {
        userStateDetails?: serializers.UserStateDetails.Raw | null;
        kycStatusDetails?: serializers.KycStatusDetails.Raw | null;
        shareHolders?: serializers.Person.Raw[] | null;
        directors?: serializers.Person.Raw[] | null;
        transactionLimits?: serializers.TransactionLimits.Raw | null;
        allowedPaymentMethods?: serializers.PaymentMethods.Raw[] | null;
        tags?: serializers.Tag.Raw[] | null;
        mccDetails?: serializers.MccDetails.Raw | null;
    }
}
